{"version":3,"file":"date-format.js","sources":["uni_modules/uni-dateformat/components/uni-dateformat/date-format.js"],"sourcesContent":["// yyyy-MM-dd hh:mm:ss.SSS 所有支持的类型\r\nfunction pad(str, length = 2) {\r\n\tstr += ''\r\n\twhile (str.length < length) {\r\n\t\tstr = '0' + str\r\n\t}\r\n\treturn str.slice(-length)\r\n}\r\n\r\nconst parser = {\r\n\tyyyy: (dateObj) => {\r\n\t\treturn pad(dateObj.year, 4)\r\n\t},\r\n\tyy: (dateObj) => {\r\n\t\treturn pad(dateObj.year)\r\n\t},\r\n\tMM: (dateObj) => {\r\n\t\treturn pad(dateObj.month)\r\n\t},\r\n\tM: (dateObj) => {\r\n\t\treturn dateObj.month\r\n\t},\r\n\tdd: (dateObj) => {\r\n\t\treturn pad(dateObj.day)\r\n\t},\r\n\td: (dateObj) => {\r\n\t\treturn dateObj.day\r\n\t},\r\n\thh: (dateObj) => {\r\n\t\treturn pad(dateObj.hour)\r\n\t},\r\n\th: (dateObj) => {\r\n\t\treturn dateObj.hour\r\n\t},\r\n\tmm: (dateObj) => {\r\n\t\treturn pad(dateObj.minute)\r\n\t},\r\n\tm: (dateObj) => {\r\n\t\treturn dateObj.minute\r\n\t},\r\n\tss: (dateObj) => {\r\n\t\treturn pad(dateObj.second)\r\n\t},\r\n\ts: (dateObj) => {\r\n\t\treturn dateObj.second\r\n\t},\r\n\tSSS: (dateObj) => {\r\n\t\treturn pad(dateObj.millisecond, 3)\r\n\t},\r\n\tS: (dateObj) => {\r\n\t\treturn dateObj.millisecond\r\n\t},\r\n}\r\n\r\n// 这都n年了iOS依然不认识2020-12-12，需要转换为2020/12/12\r\nfunction getDate(time) {\r\n\tif (time instanceof Date) {\r\n\t\treturn time\r\n\t}\r\n\tswitch (typeof time) {\r\n\t\tcase 'string':\r\n\t\t\t{\r\n\t\t\t\t// 2020-12-12T12:12:12.000Z、2020-12-12T12:12:12.000\r\n\t\t\t\tif (time.indexOf('T') > -1) {\r\n\t\t\t\t\treturn new Date(time)\r\n\t\t\t\t}\r\n\t\t\t\treturn new Date(time.replace(/-/g, '/'))\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn new Date(time)\r\n\t}\r\n}\r\n\r\nexport function formatDate(date, format = 'yyyy/MM/dd hh:mm:ss') {\r\n\tif (!date && date !== 0) {\r\n\t\treturn ''\r\n\t}\r\n\tdate = getDate(date)\r\n\tconst dateObj = {\r\n\t\tyear: date.getFullYear(),\r\n\t\tmonth: date.getMonth() + 1,\r\n\t\tday: date.getDate(),\r\n\t\thour: date.getHours(),\r\n\t\tminute: date.getMinutes(),\r\n\t\tsecond: date.getSeconds(),\r\n\t\tmillisecond: date.getMilliseconds()\r\n\t}\r\n\tconst tokenRegExp = /yyyy|yy|MM|M|dd|d|hh|h|mm|m|ss|s|SSS|SS|S/\r\n\tlet flag = true\r\n\tlet result = format\r\n\twhile (flag) {\r\n\t\tflag = false\r\n\t\tresult = result.replace(tokenRegExp, function(matched) {\r\n\t\t\tflag = true\r\n\t\t\treturn parser[matched](dateObj)\r\n\t\t})\r\n\t}\r\n\treturn result\r\n}\r\n\r\nexport function friendlyDate(time, {\r\n\tlocale = 'zh',\r\n\tthreshold = [60000, 3600000],\r\n\tformat = 'yyyy/MM/dd hh:mm:ss'\r\n}) {\r\n\tif (time === '-') {\r\n\t\treturn time\r\n\t}\r\n\tif (!time && time !== 0) {\r\n\t\treturn ''\r\n\t}\r\n\tconst localeText = {\r\n\t\tzh: {\r\n\t\t\tyear: '年',\r\n\t\t\tmonth: '月',\r\n\t\t\tday: '天',\r\n\t\t\thour: '小时',\r\n\t\t\tminute: '分钟',\r\n\t\t\tsecond: '秒',\r\n\t\t\tago: '前',\r\n\t\t\tlater: '后',\r\n\t\t\tjustNow: '刚刚',\r\n\t\t\tsoon: '马上',\r\n\t\t\ttemplate: '{num}{unit}{suffix}'\r\n\t\t},\r\n\t\ten: {\r\n\t\t\tyear: 'year',\r\n\t\t\tmonth: 'month',\r\n\t\t\tday: 'day',\r\n\t\t\thour: 'hour',\r\n\t\t\tminute: 'minute',\r\n\t\t\tsecond: 'second',\r\n\t\t\tago: 'ago',\r\n\t\t\tlater: 'later',\r\n\t\t\tjustNow: 'just now',\r\n\t\t\tsoon: 'soon',\r\n\t\t\ttemplate: '{num} {unit} {suffix}'\r\n\t\t}\r\n\t}\r\n\tconst text = localeText[locale] || localeText.zh\r\n\tlet date = getDate(time)\r\n\tlet ms = date.getTime() - Date.now()\r\n\tlet absMs = Math.abs(ms)\r\n\tif (absMs < threshold[0]) {\r\n\t\treturn ms < 0 ? text.justNow : text.soon\r\n\t}\r\n\tif (absMs >= threshold[1]) {\r\n\t\treturn formatDate(date, format)\r\n\t}\r\n\tlet num\r\n\tlet unit\r\n\tlet suffix = text.later\r\n\tif (ms < 0) {\r\n\t\tsuffix = text.ago\r\n\t\tms = -ms\r\n\t}\r\n\tconst seconds = Math.floor((ms) / 1000)\r\n\tconst minutes = Math.floor(seconds / 60)\r\n\tconst hours = Math.floor(minutes / 60)\r\n\tconst days = Math.floor(hours / 24)\r\n\tconst months = Math.floor(days / 30)\r\n\tconst years = Math.floor(months / 12)\r\n\tswitch (true) {\r\n\t\tcase years > 0:\r\n\t\t\tnum = years\r\n\t\t\tunit = text.year\r\n\t\t\tbreak\r\n\t\tcase months > 0:\r\n\t\t\tnum = months\r\n\t\t\tunit = text.month\r\n\t\t\tbreak\r\n\t\tcase days > 0:\r\n\t\t\tnum = days\r\n\t\t\tunit = text.day\r\n\t\t\tbreak\r\n\t\tcase hours > 0:\r\n\t\t\tnum = hours\r\n\t\t\tunit = text.hour\r\n\t\t\tbreak\r\n\t\tcase minutes > 0:\r\n\t\t\tnum = minutes\r\n\t\t\tunit = text.minute\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tnum = seconds\r\n\t\t\tunit = text.second\r\n\t\t\tbreak\r\n\t}\r\n\r\n\tif (locale === 'en') {\r\n\t\tif (num === 1) {\r\n\t\t\tnum = 'a'\r\n\t\t} else {\r\n\t\t\tunit += 's'\r\n\t\t}\r\n\t}\r\n\r\n\treturn text.template.replace(/{\\s*num\\s*}/g, num + '').replace(/{\\s*unit\\s*}/g, unit).replace(/{\\s*suffix\\s*}/g,\r\n\t\tsuffix)\r\n}\r\n"],"names":[],"mappings":"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"}